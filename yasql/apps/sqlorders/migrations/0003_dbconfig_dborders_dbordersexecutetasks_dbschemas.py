# Generated by Django 3.1 on 2020-08-12 12:49

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('sqlorders', '0002_releaseversions'),
    ]

    operations = [
        migrations.CreateModel(
            name='DbConfig',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='主键ID')),
                ('host', models.CharField(max_length=128, verbose_name='数据库地址')),
                ('port', models.IntegerField(default=3306, verbose_name='数据库端口')),
                ('character', models.CharField(choices=[('utf8', 'utf8'), ('utf8mb4', 'utf8mb4')], default='utf8', max_length=32, verbose_name='表字符集')),
                ('use_type', models.SmallIntegerField(choices=[(0, 'SQL审核'), (1, 'SQL查询')], default=0, verbose_name='用途')),
                ('rds_type', models.SmallIntegerField(choices=[(0, '华为云RDS'), (1, '阿里云RDS'), (2, '自建RDS')], default=0, verbose_name='数据库的类型')),
                ('rds_category', models.SmallIntegerField(choices=[(1, 'mysql'), (2, 'tidb')], default=1, verbose_name='数据库类别')),
                ('is_enabled', models.CharField(choices=[('0', '启用'), ('1', '禁用')], default='0', max_length=1, verbose_name='是否启用')),
                ('comment', models.CharField(max_length=128, null=True, verbose_name='主机描述')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('env', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='sqlorders.dbenvironment', verbose_name='环境')),
            ],
            options={
                'verbose_name': 'DB主机配置',
                'verbose_name_plural': 'DB主机配置',
                'db_table': 'yasql_dbconfig',
                'default_permissions': (),
                'unique_together': {('host', 'port', 'use_type')},
            },
        ),
        migrations.CreateModel(
            name='DbOrders',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='主键ID')),
                ('title', models.CharField(max_length=64, verbose_name='工单标题')),
                ('order_id', models.CharField(blank=True, default='', max_length=128, verbose_name='工单号')),
                ('demand', models.CharField(blank=True, max_length=256, verbose_name='需求描述')),
                ('remark', models.CharField(choices=[('立即执行', '立即执行'), ('窗口执行', '窗口执行'), ('上线执行', '上线执行')], max_length=16, verbose_name='工单备注')),
                ('immediate_execute_reason', models.CharField(blank=True, max_length=128, verbose_name='立即执行的原因')),
                ('window_time', models.CharField(blank=True, max_length=32, verbose_name='执行的时间窗口')),
                ('rds_category', models.SmallIntegerField(choices=[(1, 'mysql'), (2, 'tidb')], default=1, verbose_name='数据库类别')),
                ('sql_type', models.CharField(choices=[('DDL', 'DDL工单'), ('DML', 'DML工单'), ('EXPORT', '导出工单')], default='DML', max_length=30, verbose_name='工单类型')),
                ('file_format', models.CharField(blank=True, choices=[('xlsx', 'xlsx格式'), ('csv', 'csv格式')], max_length=30, verbose_name='导出工单的文件格式')),
                ('applicant', models.CharField(max_length=30, verbose_name='工单申请人')),
                ('auditor', models.CharField(max_length=512, verbose_name='工单审核人')),
                ('executor', models.CharField(blank=True, max_length=512, null=True, verbose_name='工单执行人')),
                ('closer', models.CharField(blank=True, max_length=512, null=True, verbose_name='工单关闭人')),
                ('reviewer', models.CharField(max_length=512, verbose_name='工单复核人')),
                ('email_cc', models.CharField(max_length=2048, verbose_name='抄送人')),
                ('database', models.CharField(max_length=32, verbose_name='库名')),
                ('progress', models.SmallIntegerField(choices=[(0, '待审核'), (1, '已驳回'), (2, '已批准'), (3, '处理中'), (4, '已完成'), (5, '已关闭'), (6, '已复核'), (7, '已勾住')], default=0, verbose_name='进度')),
                ('contents', models.TextField(default='', verbose_name='工单内容')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('cid', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='sqlorders.dbconfig')),
                ('env', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='sqlorders.dbenvironment', verbose_name='环境')),
                ('version', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='sqlorders.releaseversions', verbose_name='上线版本号')),
            ],
            options={
                'verbose_name': 'DB工单记录',
                'verbose_name_plural': 'DB工单记录',
                'db_table': 'yasql_sqlorders',
                'default_permissions': (),
                'unique_together': {('order_id',)},
                'index_together': {('applicant',), ('progress',), ('database',), ('remark',), ('title',)},
            },
        ),
        migrations.CreateModel(
            name='DbSchemas',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='主键ID')),
                ('schema', models.CharField(default='', max_length=64, verbose_name='库名')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('cid', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='sqlorders.dbconfig', verbose_name='数据库')),
            ],
            options={
                'verbose_name': 'DB库',
                'verbose_name_plural': 'DB库',
                'db_table': 'yasql_dbschemas',
                'default_permissions': (),
                'unique_together': {('cid', 'schema')},
            },
        ),
        migrations.CreateModel(
            name='DbOrdersExecuteTasks',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='主键id')),
                ('applicant', models.CharField(blank=True, max_length=30, null=True, verbose_name='工单申请人')),
                ('taskid', models.CharField(max_length=128, verbose_name='任务ID')),
                ('sql_type', models.CharField(choices=[('DDL', 'DDL工单'), ('DML', 'DML工单'), ('EXPORT', '导出工单')], default='DML', max_length=30, verbose_name='工单类型')),
                ('executor', models.CharField(default='', max_length=30, verbose_name='工单执行人')),
                ('sql', models.TextField(default='', verbose_name='执行的SQL')),
                ('execute_progress', models.SmallIntegerField(choices=[(0, '未执行'), (1, '已完成'), (2, '处理中'), (3, '失败'), (4, '暂停')], default=0, verbose_name='执行进度')),
                ('affected_rows', models.IntegerField(default=0, verbose_name='影响行数')),
                ('consuming_time', models.DecimalField(decimal_places=3, default=0.0, max_digits=10, verbose_name='耗时')),
                ('execute_log', models.TextField(default='', verbose_name='执行的日志')),
                ('rollback_sql', models.TextField(default='', verbose_name='回滚的SQL')),
                ('file_format', models.CharField(choices=[('xlsx', 'xlsx'), ('csv', 'csv'), ('txt', 'txt')], default='xlsx', max_length=30, verbose_name='导出的文件格式')),
                ('execute_time', models.DateTimeField(auto_now=True, verbose_name='工单执行时间')),
                ('created_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='sqlorders.dborders', verbose_name='关联工单id')),
            ],
            options={
                'verbose_name': 'DB工单执行任务',
                'verbose_name_plural': 'DB工单执行任务',
                'db_table': 'yasql_orders_execute_tasks',
                'default_permissions': (),
                'index_together': {('taskid',), ('execute_progress',)},
            },
        ),
    ]
